{"version":3,"file":"static/js/479.3b675cdf.chunk.js","mappings":"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","sources":["../node_modules/mermaid/dist/chunks/mermaid.core/chunk-44GW5IO5.mjs","../node_modules/mermaid/dist/chunks/mermaid.core/diagram-3XXCIKAB.mjs"],"sourcesContent":["import {\n  __name\n} from \"./chunk-BMRFU3JQ.mjs\";\n\n// src/diagrams/common/populateCommonDb.ts\nfunction populateCommonDb(ast, db) {\n  if (ast.accDescr) {\n    db.setAccDescription?.(ast.accDescr);\n  }\n  if (ast.accTitle) {\n    db.setAccTitle?.(ast.accTitle);\n  }\n  if (ast.title) {\n    db.setDiagramTitle?.(ast.title);\n  }\n}\n__name(populateCommonDb, \"populateCommonDb\");\n\nexport {\n  populateCommonDb\n};\n","import {\n  populateCommonDb\n} from \"./chunk-44GW5IO5.mjs\";\nimport {\n  cleanAndMerge\n} from \"./chunk-F7MYA6JM.mjs\";\nimport {\n  selectSvgElement\n} from \"./chunk-D33BOVEP.mjs\";\nimport {\n  __name,\n  clear,\n  configureSvgSize,\n  defaultConfig_default,\n  getAccDescription,\n  getAccTitle,\n  getConfig,\n  getDiagramTitle,\n  log,\n  setAccDescription,\n  setAccTitle,\n  setDiagramTitle\n} from \"./chunk-BMRFU3JQ.mjs\";\n\n// src/diagrams/packet/db.ts\nvar defaultPacketData = {\n  packet: []\n};\nvar data = structuredClone(defaultPacketData);\nvar DEFAULT_PACKET_CONFIG = defaultConfig_default.packet;\nvar getConfig2 = /* @__PURE__ */ __name(() => {\n  const config = cleanAndMerge({\n    ...DEFAULT_PACKET_CONFIG,\n    ...getConfig().packet\n  });\n  if (config.showBits) {\n    config.paddingY += 10;\n  }\n  return config;\n}, \"getConfig\");\nvar getPacket = /* @__PURE__ */ __name(() => data.packet, \"getPacket\");\nvar pushWord = /* @__PURE__ */ __name((word) => {\n  if (word.length > 0) {\n    data.packet.push(word);\n  }\n}, \"pushWord\");\nvar clear2 = /* @__PURE__ */ __name(() => {\n  clear();\n  data = structuredClone(defaultPacketData);\n}, \"clear\");\nvar db = {\n  pushWord,\n  getPacket,\n  getConfig: getConfig2,\n  clear: clear2,\n  setAccTitle,\n  getAccTitle,\n  setDiagramTitle,\n  getDiagramTitle,\n  getAccDescription,\n  setAccDescription\n};\n\n// src/diagrams/packet/parser.ts\nimport { parse } from \"@mermaid-js/parser\";\nvar maxPacketSize = 1e4;\nvar populate = /* @__PURE__ */ __name((ast) => {\n  populateCommonDb(ast, db);\n  let lastBit = -1;\n  let word = [];\n  let row = 1;\n  const { bitsPerRow } = db.getConfig();\n  for (let { start, end, bits, label } of ast.blocks) {\n    if (start !== void 0 && end !== void 0 && end < start) {\n      throw new Error(`Packet block ${start} - ${end} is invalid. End must be greater than start.`);\n    }\n    start ??= lastBit + 1;\n    if (start !== lastBit + 1) {\n      throw new Error(\n        `Packet block ${start} - ${end ?? start} is not contiguous. It should start from ${lastBit + 1}.`\n      );\n    }\n    if (bits === 0) {\n      throw new Error(`Packet block ${start} is invalid. Cannot have a zero bit field.`);\n    }\n    end ??= start + (bits ?? 1) - 1;\n    bits ??= end - start + 1;\n    lastBit = end;\n    log.debug(`Packet block ${start} - ${lastBit} with label ${label}`);\n    while (word.length <= bitsPerRow + 1 && db.getPacket().length < maxPacketSize) {\n      const [block, nextBlock] = getNextFittingBlock({ start, end, bits, label }, row, bitsPerRow);\n      word.push(block);\n      if (block.end + 1 === row * bitsPerRow) {\n        db.pushWord(word);\n        word = [];\n        row++;\n      }\n      if (!nextBlock) {\n        break;\n      }\n      ({ start, end, bits, label } = nextBlock);\n    }\n  }\n  db.pushWord(word);\n}, \"populate\");\nvar getNextFittingBlock = /* @__PURE__ */ __name((block, row, bitsPerRow) => {\n  if (block.start === void 0) {\n    throw new Error(\"start should have been set during first phase\");\n  }\n  if (block.end === void 0) {\n    throw new Error(\"end should have been set during first phase\");\n  }\n  if (block.start > block.end) {\n    throw new Error(`Block start ${block.start} is greater than block end ${block.end}.`);\n  }\n  if (block.end + 1 <= row * bitsPerRow) {\n    return [block, void 0];\n  }\n  const rowEnd = row * bitsPerRow - 1;\n  const rowStart = row * bitsPerRow;\n  return [\n    {\n      start: block.start,\n      end: rowEnd,\n      label: block.label,\n      bits: rowEnd - block.start\n    },\n    {\n      start: rowStart,\n      end: block.end,\n      label: block.label,\n      bits: block.end - rowStart\n    }\n  ];\n}, \"getNextFittingBlock\");\nvar parser = {\n  parse: /* @__PURE__ */ __name(async (input) => {\n    const ast = await parse(\"packet\", input);\n    log.debug(ast);\n    populate(ast);\n  }, \"parse\")\n};\n\n// src/diagrams/packet/renderer.ts\nvar draw = /* @__PURE__ */ __name((_text, id, _version, diagram2) => {\n  const db2 = diagram2.db;\n  const config = db2.getConfig();\n  const { rowHeight, paddingY, bitWidth, bitsPerRow } = config;\n  const words = db2.getPacket();\n  const title = db2.getDiagramTitle();\n  const totalRowHeight = rowHeight + paddingY;\n  const svgHeight = totalRowHeight * (words.length + 1) - (title ? 0 : rowHeight);\n  const svgWidth = bitWidth * bitsPerRow + 2;\n  const svg = selectSvgElement(id);\n  svg.attr(\"viewbox\", `0 0 ${svgWidth} ${svgHeight}`);\n  configureSvgSize(svg, svgHeight, svgWidth, config.useMaxWidth);\n  for (const [word, packet] of words.entries()) {\n    drawWord(svg, packet, word, config);\n  }\n  svg.append(\"text\").text(title).attr(\"x\", svgWidth / 2).attr(\"y\", svgHeight - totalRowHeight / 2).attr(\"dominant-baseline\", \"middle\").attr(\"text-anchor\", \"middle\").attr(\"class\", \"packetTitle\");\n}, \"draw\");\nvar drawWord = /* @__PURE__ */ __name((svg, word, rowNumber, { rowHeight, paddingX, paddingY, bitWidth, bitsPerRow, showBits }) => {\n  const group = svg.append(\"g\");\n  const wordY = rowNumber * (rowHeight + paddingY) + paddingY;\n  for (const block of word) {\n    const blockX = block.start % bitsPerRow * bitWidth + 1;\n    const width = (block.end - block.start + 1) * bitWidth - paddingX;\n    group.append(\"rect\").attr(\"x\", blockX).attr(\"y\", wordY).attr(\"width\", width).attr(\"height\", rowHeight).attr(\"class\", \"packetBlock\");\n    group.append(\"text\").attr(\"x\", blockX + width / 2).attr(\"y\", wordY + rowHeight / 2).attr(\"class\", \"packetLabel\").attr(\"dominant-baseline\", \"middle\").attr(\"text-anchor\", \"middle\").text(block.label);\n    if (!showBits) {\n      continue;\n    }\n    const isSingleBlock = block.end === block.start;\n    const bitNumberY = wordY - 2;\n    group.append(\"text\").attr(\"x\", blockX + (isSingleBlock ? width / 2 : 0)).attr(\"y\", bitNumberY).attr(\"class\", \"packetByte start\").attr(\"dominant-baseline\", \"auto\").attr(\"text-anchor\", isSingleBlock ? \"middle\" : \"start\").text(block.start);\n    if (!isSingleBlock) {\n      group.append(\"text\").attr(\"x\", blockX + width).attr(\"y\", bitNumberY).attr(\"class\", \"packetByte end\").attr(\"dominant-baseline\", \"auto\").attr(\"text-anchor\", \"end\").text(block.end);\n    }\n  }\n}, \"drawWord\");\nvar renderer = { draw };\n\n// src/diagrams/packet/styles.ts\nvar defaultPacketStyleOptions = {\n  byteFontSize: \"10px\",\n  startByteColor: \"black\",\n  endByteColor: \"black\",\n  labelColor: \"black\",\n  labelFontSize: \"12px\",\n  titleColor: \"black\",\n  titleFontSize: \"14px\",\n  blockStrokeColor: \"black\",\n  blockStrokeWidth: \"1\",\n  blockFillColor: \"#efefef\"\n};\nvar styles = /* @__PURE__ */ __name(({ packet } = {}) => {\n  const options = cleanAndMerge(defaultPacketStyleOptions, packet);\n  return `\n\t.packetByte {\n\t\tfont-size: ${options.byteFontSize};\n\t}\n\t.packetByte.start {\n\t\tfill: ${options.startByteColor};\n\t}\n\t.packetByte.end {\n\t\tfill: ${options.endByteColor};\n\t}\n\t.packetLabel {\n\t\tfill: ${options.labelColor};\n\t\tfont-size: ${options.labelFontSize};\n\t}\n\t.packetTitle {\n\t\tfill: ${options.titleColor};\n\t\tfont-size: ${options.titleFontSize};\n\t}\n\t.packetBlock {\n\t\tstroke: ${options.blockStrokeColor};\n\t\tstroke-width: ${options.blockStrokeWidth};\n\t\tfill: ${options.blockFillColor};\n\t}\n\t`;\n}, \"styles\");\n\n// src/diagrams/packet/diagram.ts\nvar diagram = {\n  parser,\n  db,\n  renderer,\n  styles\n};\nexport {\n  diagram\n};\n"],"names":["populateCommonDb","ast","db","accDescr","setAccDescription","accTitle","setAccTitle","title","setDiagramTitle","__name","defaultPacketData","packet","data","structuredClone","DEFAULT_PACKET_CONFIG","defaultConfig_default","getConfig2","config","cleanAndMerge","getConfig","showBits","paddingY","getPacket","pushWord","word","length","push","clear","getAccTitle","getDiagramTitle","getAccDescription","populate","lastBit","row","bitsPerRow","start","end","bits","label","blocks","Error","log","debug","block","nextBlock","getNextFittingBlock","rowEnd","rowStart","parser","parse","async","input","draw","_text","id","_version","diagram2","db2","rowHeight","bitWidth","words","totalRowHeight","svgHeight","svgWidth","svg","selectSvgElement","attr","configureSvgSize","useMaxWidth","entries","drawWord","append","text","rowNumber","_ref","paddingX","group","wordY","blockX","width","isSingleBlock","bitNumberY","defaultPacketStyleOptions","byteFontSize","startByteColor","endByteColor","labelColor","labelFontSize","titleColor","titleFontSize","blockStrokeColor","blockStrokeWidth","blockFillColor","diagram","renderer","styles","arguments","undefined","options"],"sourceRoot":""}